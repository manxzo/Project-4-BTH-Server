# Generated by Cargo
# will have compiled files and executables
debug/
target/

# Remove Cargo.lock from gitignore if creating an executable, leave it for libraries
# More information here https://doc.rust-lang.org/cargo/guide/cargo-toml-vs-cargo-lock.html
Cargo.lock

# These are backup files generated by rustfmt
**/*.rs.bk

# MSVC Windows builds of rustc generate these, which store debugging information
*.pdb

# RustRover
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
#.idea/
# Ignore Rust build artifacts
target/
**/*.rs.bk
Cargo.lock

# Ignore compiled binaries
*.exe
*.out
*.o

# Ignore environment files (contains secrets)
.env
.env.local
.env.*.local

# Ignore logs and debug output
logs/
*.log
debug.log
*.tmp

# Ignore database files (if using SQLite for testing)
db.sqlite
db.sqlite-journal

# Ignore Node.js-related files (if used in frontend)
node_modules/
package-lock.json
yarn.lock

# Ignore Postman collections (optional)
bth-server-postman.json

# Ignore VS Code settings
.vscode/

# Ignore macOS system files
.DS_Store

# Ignore JetBrains IDE settings
.idea/
*.iml

# Ignore Linux system files
*.swp
*.swo
